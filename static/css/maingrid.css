        /* Main Grid Layout */
        .main-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);  /* 3 equal-width columns */
            grid-template-rows: auto auto auto auto; /* 4 rows, adjust heights as needed */
            /*gap: 1px;*/  /* Space between grid items */
        }

        /* General styling for grid cells */
        .cell {
            padding: 20px;
            border: 1px solid #000;
            /*background-color: #f4f4f4;*/
        }

        /* Specific styles for the nested grid (Cell 8) */
        .move-log {
            display: flex;  /* To center the nested grid */
            background-color: lightgray;
            align-items: center;
            justify-content: center;
        }

        /* Optional: Styling for individual cells (e.g., if you want different styles for each grid item) */
        .cell-1 { background-color: lightgray; }
        .cell-2 { background-color: lightgreen; }
        .cell-3 { background-color: lightcoral; }
        .cell-4 {
            background-color: charcoal;
            grid-column: span 2;
        }
        .cell-5 {
            background-color: black;
            grid-column: span 2;
        }
        .cell-6 {
            background-color: lightblue;
            grid-row: span 2;
        }

        .grid-map {
            width: 100%;
            height: auto;
            max-width: 100%;
            object-fit: contain;

            display: flex;
            background-color: black;
            align-items: center;
            justify-content: center;
            box-sizing: border-box;
            }

        @media screen and (max-width: 1280px) {
            .main-grid {
                grid-template-columns: 1fr;
            }

            .grid-map {
                width: 80%; /* scale to 80% of the parent container */
                margin: 0 auto; /* center the map horizontally */
            }

            .cell {
                padding: 10px; /* reduce padding for smaller screent */
            }
        }


        @media screen and (max-width: 768px) {
            .grid-map {
                width: 90%;
            }

            .cell {
                padding: 5px
            }

        }




        #startGameContainer{
            display: block;
        }
        #gameStateContainer{
            display: block;
            border: 2px;
            /*background-color: blue;*/
            font-size: 2em;
        }
        #currentTurnPlayer {
            font-size: 1.2em;
            color: red;
            margin-top: 10px;
        }

        #chatContainer {
            display: none;
            margin-top: 20px;
        }
        #waitingMessage {
            font-size: 1.2em;
            color: red;
            margin-top: 10px;
        }
        #messageInput {
            display: block;
            width: 100%;
            padding: 10px;
            font-size: 1em;
            margin-top: 10px;
        }
        #sendButton {
            padding: 10px 15px;
            background-color: #4CAF50;
            color: white;
            border: none;
            cursor: pointer;
        }
        #sendButton:disabled {
            background-color: #ccc;
        }
        #chat {
            max-height: 300px;
            overflow-y: auto;
            margin-bottom: 10px;
        }
        #yourCurrentPosition {
            font-size: 1.2em;
            color: black;
            margin-top: 10px;
        }
        #possibleMovesList {
            font-size: 1.2em;
            color: blue;
            margin-top: 10px;
        }
        #gameMapContainer {
            display: flex;
            justify-content: center; /* horizontally center the image */
            align-items: center; /* vertically center the image */
            width:100%; /* allow the container to take up 100% of the parent grid cell's width */
            height: auto;

        }
        #gameMap {
            width: 100%;  /* scale the image to fill it's container */
            height: auto;
            max-width: 100%; /* ensure the image doesn't stretch beyond it's container */
            object-fit: contain;  /* ensures the whole image fits without being cropped */
        }